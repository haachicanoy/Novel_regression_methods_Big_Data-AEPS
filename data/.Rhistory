trans_data$month_c <- gsub(pattern='Ene', replacement='01', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Feb', replacement='02', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Mar', replacement='03', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Abr', replacement='04', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='May', replacement='05', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Jun', replacement='06', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Jul', replacement='07', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Ago', replacement='08', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Sep', replacement='09', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Oct', replacement='10', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Nov', replacement='11', x=trans_data$month_c)
trans_data$month_c <- gsub(pattern='Dic', replacement='12', x=trans_data$month_c)
library(zoo)
trans_data$date <- as.yearmon(paste(trans_data$year,'-',trans_data$month_c,sep=''))
View(trans_data)
names(trans_data)
trans_data <- trans_data[,c('Provincia','Distrito','Unidad muestreada','Unidad_categorizada','Campaña','month','year','month_c','date',
'Cosechas','Precio_chacra','Produccion','Siembras','Superficie_perdida','Superficie_verde','Rendimiento')]
write.csv(x=trans_data, file='D:/ToBackup/AEPS-Big data/Peru_database/arroz_chiclayo/BDD_consolidada.csv', row.names=FALSE)
trans_data2 <- trans_data
View(trans_data2)
unique(trans_data2$month)
grep(pattern='Ago_B', x=trans_data2$month, fixed=T)
mtch <- c(grep(pattern='Ago_B', x=trans_data2$month, fixed=T),
grep(pattern='Sep_B', x=trans_data2$month, fixed=T),
grep(pattern='Oct_B', x=trans_data2$month, fixed=T),
grep(pattern='Nov_B', x=trans_data2$month, fixed=T),
grep(pattern='Dic_B', x=trans_data2$month, fixed=T))
mtch <- sort(mtch)
mtch
1:nrow(trans_data2)
setdiff(1:nrow(trans_data2),mtch)
View(trans_data2[mtch,])
mtch <- c(grep(pattern='Ago_B', x=trans_data2$month, fixed=T),
grep(pattern='Sep_B', x=trans_data2$month, fixed=T),
grep(pattern='Oct_B', x=trans_data2$month, fixed=T),
grep(pattern='Nov_B', x=trans_data2$month, fixed=T),
grep(pattern='Dic_B', x=trans_data2$month, fixed=T))
mtch <- sort(mtch)
mtch <- setdiff(1:nrow(trans_data2),mtch)
View(trans_data2[mtch,])
write.csv(x=trans_data2, file='D:/ToBackup/AEPS-Big data/Peru_database/arroz_chiclayo/BDD_consolidada_campana.csv', row.names=FALSE)
trans_data2 <- trans_data
mtch <- c(grep(pattern='Ago_B', x=trans_data2$month, fixed=T),
grep(pattern='Sep_B', x=trans_data2$month, fixed=T),
grep(pattern='Oct_B', x=trans_data2$month, fixed=T),
grep(pattern='Nov_B', x=trans_data2$month, fixed=T),
grep(pattern='Dic_B', x=trans_data2$month, fixed=T))
mtch <- sort(mtch)
mtch <- setdiff(1:nrow(trans_data2),mtch)
trans_data2 <- trans_data2[mtch,]
write.csv(x=trans_data2, file='D:/ToBackup/AEPS-Big data/Peru_database/arroz_chiclayo/BDD_consolidada_campana.csv', row.names=FALSE)
rend_original <- trans_data2$Rendimiento
rend_calculat <- trans_data2$Produccion/trans_data2$Cosechas
rend_calculat <- 1000*(trans_data2$Produccion/trans_data2$Cosechas)
sum(which(!is.na(rend_original)))
sum(which(!is.na(rend_calculat)))
sum(which(!is.na(rend_original))) > sum(which(!is.na(rend_calculat)))
hist(rend_original)
which(!is.na(rend_original))
!is.na(rend_original)
sum(!is.na(rend_original)) > sum(which(!is.na(rend_calculat)))
sum(!is.na(rend_original)) > sum(!is.na(rend_calculat))
sum(!is.na(rend_original))
sum(!is.na(rend_calculat))
plot(rend_original, rend_calculat)
which(rend_original<rend_calculat)
plot(rend_original[-762], rend_calculat[-762])
hist(trans_data2$Precio_chacra)
which(trans_data2$Precio_chacra>50)
hist(trans_data2$Precio_chacra[-3787])
hist(trans_data$rend, border='#A6BDDB', col='#74A9CF', xlab='Yield (Ton/ha)', ylab='Number of productive events', main='Histogram of yield')
hist(trans_data2$rend, border='#A6BDDB', col='#74A9CF', xlab='Yield (Ton/ha)', ylab='Number of productive events', main='Histogram of yield')
hist(trans_data2$Rendimiento, border='#A6BDDB', col='#74A9CF', xlab='Yield (Ton/ha)', ylab='Number of productive events', main='Histogram of yield')
p <- ggplot(trans_data2, aes(x=date, y=Rendimiento))
p <- p + xlab('Harvest date') + ylab('Yield (Ton/ha)')
p <- p + stat_smooth(fill='red', colour='darkred', size=1.5, alpha=0.2, span=0.2) + geom_point()
p <- p + geom_rug(col=rgb(.5,0,0,alpha=.2))
p <- p + theme(#panel.grid.major.x = element_blank(),
#panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
#panel.grid.minor.y = element_blank(),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(face="bold",size=12),
axis.title.y = element_text(face="bold",size=12))
p
names(trans_data2)
as.Date(trans_data2$date)
p <- ggplot(trans_data2, aes(x=as.Date(date), y=Rendimiento))
p <- p + xlab('Harvest date') + ylab('Yield (Ton/ha)')
p <- p + stat_smooth(fill='red', colour='darkred', size=1.5, alpha=0.2, span=0.2) + geom_point()
p <- p + geom_rug(col=rgb(.5,0,0,alpha=.2))
p <- p + theme(#panel.grid.major.x = element_blank(),
#panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
#panel.grid.minor.y = element_blank(),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(face="bold",size=12),
axis.title.y = element_text(face="bold",size=12))
p
p <- ggplot(trans_data2, aes(x=as.Date(date), y=Rendimiento))
p <- p + xlab('Harvest date') + ylab('Yield (Ton/ha)')
p <- p + stat_smooth(fill='red', colour='darkred', size=1.5, alpha=0.2, span=0.1) + geom_point()
p <- p + geom_rug(col=rgb(.5,0,0,alpha=.2))
p <- p + theme(axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
axis.title.x = element_text(face="bold",size=12),
axis.title.y = element_text(face="bold",size=12))
p
ggplot(trans_data2, aes(x=Rendimiento, colour=factor(Distrito))) + geom_density()
ggplot(trans_data2, aes(x=factor(Distrito), y=Rendimiento)) + geom_boxplot()
ggplot(trans_data2, aes(x=factor(Distrito), y=Rendimiento)) + geom_violin()
ggplot(trans_data2, aes(x=factor(Distrito), y=Rendimiento)) + geom_boxplot()
View(trans_data2)
head(trans_data2)
names(trans_data)
View(trans_data %>% arrange(year, month_c, Distrito, Unidad_categorizada))
View(trans_data %>% arrange(month_c, year, Distrito, Unidad_categorizada))
View(trans_data %>% arrange(Distrito, Unidad_categorizada, year))
View(trans_data2 %>% arrange(Distrito, Unidad_categorizada, year))
trans_data2 <- trans_data2 %>% arrange(Distrito, Unidad_categorizada, year)
write.csv(x=trans_data2, file='D:/ToBackup/AEPS-Big data/Peru_database/arroz_chiclayo/BDD_consolidada_campana.csv', row.names=FALSE)
unique(trans_data2$Distrito)
unique(trans_data2$Unidad_categorizada)
head(trans_data2 %>% filter(Distrito==paste(distList[1])))
distList <- unique(trans_data2$Distrito)
head(trans_data2 %>% filter(Distrito==paste(distList[1])))
subData <- trans_data2 %>% filter(Distrito==paste(distList[1]))
uniList  <- unique(subData$Unidad_categorizada)
uniList
subData %>% filter(Unidad_categorizada==paste(uniList[1]))
subData %>% filter(Unidad_categorizada==paste(uniList[j]), !is.na(Rendimiento))
subData %>% filter(Unidad_categorizada==paste(uniList[1]), !is.na(Rendimiento))
View(subData %>% filter(Unidad_categorizada==paste(uniList[j]), !is.na(Rendimiento)))
View(subData %>% filter(Unidad_categorizada==paste(uniList[1]), !is.na(Rendimiento)))
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[1])),]
head(subData)
which(subData$Unidad_categorizada==paste(uniList[1]) & !is.na(subData$Rendimiento))
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
}
}; rm(i,j,subData,uniList,distList)
trans_data2 <- trans_data2[,c('Provincia','Distrito','Unidad muestreada','Unidad_categorizada','Campaña','month','year','month_c','date','evento',
'Cosechas','Precio_chacra','Produccion','Siembras','Superficie_perdida','Superficie_verde','Rendimiento')]
View(trans_data2)
trans_data2$evento <- NA
View(trans_data2)
i=1
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
distList <- unique(trans_data2$Distrito)
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
j=1
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
mtch
trans_data2$evento[mtch]
1:length(mtch)
trans_data2$evento[mtch] <- 1:length(mtch)
trans_data2$evento[mtch]
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
}
}; rm(i,j,mtch,subData,uniList,distList)
View(trans_data2)
trans_data2$evento <- NA
i=j=1
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
distList <- unique(trans_data2$Distrito)
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
mtch
trans_data2$evento[mtch] <- 1:length(mtch)
trans_data2$evento[mtch]
View(trans_data2)
j=2
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
mtch
trans_data2$evento[mtch] <- 1:length(mtch)
lapply(1:length(distList), function(i)
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
lapply(1:length(uniList), function(j)
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
})
})
trans_data2$evento <- NA
View(trans_data2)
distList <- unique(trans_data2$Distrito)
lapply(1:length(distList), function(i)
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
lapply(1:length(uniList), function(j)
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
})
})
lapply(1:length(distList), function(i)
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
lapply(1:length(uniList), function(j)
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
return(trans_data2)
})
})
trans_data2$evento <- NA
View(trans_data2)
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
}; rm(subData,uniList)
}; rm(i,j,mtch,distList)
2500*4
lapply(1:length(distList), function(i)
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
lapply(1:length(uniList), function(j)
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
})
})
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
lapply(1:length(distList), function(i)
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
lapply(1:length(uniList), function(j)
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento[mtch] <- 1:length(mtch)
})
})
i=1
j=3
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
mtch
1:length(mtch)
uniList[j]
1:1
trans_data2$evento <- NA
View(trans_data2)
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}; rm(subData,uniList)
}; rm(i,j,mtch,distList)
View(trans_data2)
1:nrow(trans_data2)
rownames(trans_data2) <- 1:nrow(trans_data2)
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}; rm(subData,uniList)
}; rm(i,j,mtch,distList)
View(trans_data2)
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}
}
View(trans_data2)
paste(distList[i])
paste(uniList[j]
)
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) && !is.na(subData$Rendimiento))
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}
}
View(trans_data2)
which(subData$Unidad_categorizada==paste(uniList[j]) && !is.na(subData$Rendimiento))
which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}
}
View(trans_data2)
trans_data2$ID_row <- 1:nrow(trans_data2)
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
trans_data2$ID_row <- 1:nrow(trans_data2)
trans_data2$evento <- NA
distList <- unique(trans_data2$Distrito)
for(i in 1:length(distList))
{
subData <- trans_data2[which(trans_data2$Distrito==paste(distList[i])),]
uniList  <- unique(subData$Unidad_categorizada)
for(j in 1:length(uniList))
{
mtch <- subData$ID_row[which(subData$Unidad_categorizada==paste(uniList[j]) & !is.na(subData$Rendimiento))]
if(length(mtch)>0){
trans_data2$evento[mtch] <- 1:length(mtch); rm(mtch)
} else{
cat('This "Unidad_categorizada" has not harvest events\n')
}
}
}
View(trans_data2)
trans_data2$ID_row <- NULL
View(trans_data2)
rm(distList,i,subData,uniList,j,mtch)
paste(trans_data2$Provincia,'_',trans_data2$Distrito,'_',trans_data2$Unidad_categorizada,'_',trans_data2$year,'_',trans_data2$month_c,'_',trans_data2$evento, sep='')
nchar(trans_data2$evento)
trans_data2$idEvento <- paste(trans_data2$Provincia,'/',trans_data2$Distrito,'/',trans_data2$Unidad_categorizada,'/',trans_data2$year,'/',trans_data2$month_c,'/',trans_data2$evento, sep='')
trans_data2$idEvento
is.na(trans_data2$evento)
which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==1)
trans_data2$evento[which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==1)]
paste('0',trans_data2$evento[which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==1)],sep='')
trans_data2$evento[which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==2)]
paste('0',trans_data2$evento[which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==2)],sep='')
paste('00',trans_data2$evento[which(!is.na(trans_data2$evento) & nchar(trans_data2$evento)==1)],sep='')
# load packages
library(maps)
library(ggplot2)
noaa = "ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r03/wmo/csv/basin/"
basin = c("NA", "EP")
NA.basin = read.csv(paste(noaa, "Basin.", basin[1], ".ibtracs_wmo.v03r03.csv",
sep = ""), skip = 1, stringsAsFactors = FALSE)
EP.basin = read.csv(paste(noaa, "Basin.", basin[2], ".ibtracs_wmo.v03r03.csv",
sep = ""), skip = 1, stringsAsFactors = FALSE)
NA.basin = NA.basin[-1, ]
EP.basin = EP.basin[-1, ]
NA.basin$Season = as.numeric(NA.basin$Season)
NA.basin$Latitude = as.numeric(gsub("^ ", "", NA.basin$Latitude))
NA.basin$Longitude = as.numeric(gsub("^ ", "", NA.basin$Longitude))
NA.basin$Wind.WMO. = as.numeric(gsub("^ ", "", NA.basin$Wind.WMO.))
EP.basin$Season = as.numeric(EP.basin$Season)
EP.basin$Latitude = as.numeric(gsub("^ ", "", EP.basin$Latitude))
EP.basin$Longitude = as.numeric(gsub("^ ", "", EP.basin$Longitude))
EP.basin$Wind.WMO. = as.numeric(gsub("^ ", "", EP.basin$Wind.WMO.))
time.date = strsplit(NA.basin$ISO_time, " ")
iso.date = unlist(lapply(time.date, function(x) x[1]))
iso.month = substr(iso.date, 6, 7)
NA.basin$Month = factor(iso.month, labels = c(month.name))
time.date = strsplit(EP.basin$ISO_time, " ")
iso.date = unlist(lapply(time.date, function(x) x[1]))
iso.month = substr(iso.date, 6, 7)
EP.basin$Month = factor(iso.month, labels = c(month.name)[-4])
storms = rbind(NA.basin, EP.basin)
wm = map_data("world")
substorms = subset(storms, Season %in% 1999:2010)
nop = which(substorms$Name == "NOT NAMED")
substorms = substorms[-nop, ]
substorms$ID = as.factor(paste(substorms$Name, substorms$Season,
sep = "."))
substorms$Name = as.factor(substorms$Name)
map1 = ggplot(substorms, aes(x = Longitude, y = Latitude, group = ID)) +
geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group),
fill = "gray25", colour = "gray10", size = 0.2) + geom_path(data = substorms,
aes(group = ID, colour = Wind.WMO.), alpha = 0.5, size = 0.8) + xlim(-138,
-20) + ylim(3, 55) + labs(x = "", y = "", colour = "Wind \n(knots)") + opts(panel.background = theme_rect(fill = "gray10",
colour = "gray30"), title = "Hurricane Trajectories 1999 - 2010", axis.text.x = theme_blank(),
axis.text.y = theme_blank(), axis.ticks = theme_blank(), panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank())
map1 = ggplot(substorms, aes(x = Longitude, y = Latitude, group = ID)) +
geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group),
fill = "gray25", colour = "gray10", size = 0.2) + geom_path(data = substorms,
aes(group = ID, colour = Wind.WMO.), alpha = 0.5, size = 0.8) + xlim(-138,
-20) + ylim(3, 55) + labs(x = "", y = "", colour = "Wind \n(knots)") + theme(panel.background = theme_rect(fill = "gray10",
colour = "gray30"), title = "Hurricane Trajectories 1999 - 2010", axis.text.x = theme_blank(),
axis.text.y = theme_blank(), axis.ticks = theme_blank(), panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank())
map1 = ggplot(substorms, aes(x = Longitude, y = Latitude, group = ID)) +
geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group),
fill = "gray25", colour = "gray10", size = 0.2) + geom_path(data = substorms,
aes(group = ID, colour = Wind.WMO.), alpha = 0.5, size = 0.8) + xlim(-138,
-20) + ylim(3, 55) + labs(x = "", y = "", colour = "Wind \n(knots)") + theme(panel.background = element_rect(fill = "gray10",
colour = "gray30"), title = "Hurricane Trajectories 1999 - 2010", axis.text.x = theme_blank(),
axis.text.y = theme_blank(), axis.ticks = theme_blank(), panel.grid.major = theme_blank(),
panel.grid.minor = theme_blank())
map1 = ggplot(substorms, aes(x = Longitude, y = Latitude, group = ID)) +
geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group),
fill = "gray25", colour = "gray10", size = 0.2) + geom_path(data = substorms,
aes(group = ID, colour = Wind.WMO.), alpha = 0.5, size = 0.8) + xlim(-138,
-20) + ylim(3, 55) + labs(x = "", y = "", colour = "Wind \n(knots)") + theme(panel.background = element_rect(fill = "gray10",
colour = "gray30"), title = "Hurricane Trajectories 1999 - 2010", axis.text.x = element_blank(),
axis.text.y = element_blank(), axis.ticks = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(RGoogleDocs)
auth = getGoogleAuth(login = 'harold22010@gmail.com', password = 'welcometohell1')
setwd('C:/Users/haachicanoy/Documents/GitHub/Novel_regression_methods_Big_Data-AEPS/data')
management <- read.csv(file='eventosDeCosecha.csv',row.names=1)
climate <- read.csv(file='estacionClimatica.csv')
# Vincular clima a los datos de manejo
vinculClima <- function(baseCosecha,climBase,fsiem="Sowing_Date",fcos="Harvest_Date")
{
nEven <- nrow(baseCosecha)
##Por evento extrae el vector de fechas entre siembra y cosecha
fechaEvent  <- lapply(1:nEven,function(x){fecha <- as.Date(baseCosecha[fsiem][,1][x]:baseCosecha[fcos][,1][x],format='%m/%d/%Y',origin = "01/01/1970");return(as.data.frame(fecha))})
climBase$DATE <- as.Date(climBase$DATE, format='%m/%d/%Y', origin="01/01/1970")
##Por vector de fechas de cada evento asigna variables de clima
eventosCosech <- lapply(1:nEven,function(x){merge(fechaEvent[[x]],climBase,by.x="fecha",by.y="DATE",all.x=T,all.y=F)})
#Calculando algunos indicadores para todos los eventos
Indicadores <- lapply(1:nEven, function(x){Indicadores<-with(eventosCosech[[x]],c( mean(TMAX),mean(TMIN),mean((TMAX-TMIN)/2),mean(TMAX-TMIN),sum(ESOL),sum(TMAX>34),sum(RAIN),sum(RAIN>=10)) );return(as.data.frame(Indicadores))})
nomrows=c("Temp_Max_Avg","Temp_Min_Avg","Temp_Avg",  "Diurnal_Range_Avg",	"Sol_Ener_Accu"	,"Temp_Max_34_Freq","Rain_Accu","Rain_10_Freq")
sa=as.data.frame(Indicadores)
row.names(sa)=nomrows
climEvent=as.data.frame(t(sa))
# Union de indicadores clima y eventos
joint=as.data.frame(cbind(baseCosecha,climEvent))
return(joint)
}
datos <- vinculClima(baseCosecha=management,climBase=climate,fsiem="Sowing_Date",fcos="Harvest_Date")
datos$Sowing_Date <- as.Date(datos$Sowing_Date, format='%m/%d/%Y', origin="01/01/1970")
datos$Harvest_Date <- as.Date(datos$Harvest_Date, format='%m/%d/%Y', origin="01/01/1970")
rm(vinculClima, management, climate)
datos <- datos[,c('File_Code','Sowing_Date','Sowing_Month','Harvest_Date','Harvest_Month','Harvest_Year',
'Department','Municipality','Area','Cropping_System_Simple','Variety',
'Temp_Max_Avg','Temp_Min_Avg','Temp_Avg','Diurnal_Range_Avg','Sol_Ener_Accu','Temp_Max_34_Freq','Rain_Accu','Rain_10_Freq',
'Yield')]
names(datos)
12:ncol(datos)
12:(ncol(datos)-1)
climate <- 12:(ncol(datos)-1)
ncol(datos)
names(datos)
management <- c(3,5,6,8,9,10,11)
